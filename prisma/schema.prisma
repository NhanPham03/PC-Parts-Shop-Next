generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  account_id Int      @id @default(autoincrement())
  username   String   @unique
  password   String    
  user_id    Int
  user       User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade, map: "FK_accounts_user_id")

  @@map("accounts")
  @@index([user_id], map: "FK_accounts_user_id")
}

model Cart {
  cart_id    Int          @id @default(autoincrement())
  user_id    Int
  updated_at DateTime     @updatedAt
  user       User         @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade, map: "FK_carts_user_id")
  cart_item  cart_item[]
  receipt    Receipt[]

  @@map("carts")
  @@index([user_id], map: "FK_carts_user_id")
}

model cart_item {
  cart_id  Int
  item_id  Int
  cart     Cart   @relation(fields: [cart_id], references: [cart_id], onDelete: Cascade, onUpdate: Cascade, map: "FK_cart_item_cart_id")
  item     Item   @relation(fields: [item_id], references: [item_id], onDelete: Cascade, onUpdate: Cascade, map: "FK_cart_item_item_id")

  @@id([cart_id, item_id])
  @@index([item_id], map: "FK_cart_item_item_id")
}

model User {
  user_id     Int       @id @default(autoincrement())
  address     String?   @db.VarChar(255)
  birthdate   DateTime? 
  city        String?   @db.VarChar(255)
  country     String?   @db.VarChar(255)
  email       String    
  first_name  String    
  last_name   String    
  account     Account[]
  cart        Cart[]
  receipt     Receipt[]

  @@map("users")
}

model Receipt {
  receipt_id Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  total      Float    @default(0)
  cart_id    Int
  user_id    Int
  cart       Cart     @relation(fields: [cart_id], references: [cart_id], onDelete: Cascade, onUpdate: Cascade, map: "FK_receipts_cart_id")
  user       User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade, map: "FK_receipts_user_id")

  @@map("receipts")
  @@index([cart_id], map: "FK_receipts_cart_id")
  @@index([user_id], map: "FK_receipts_user_id")
}

model Item {
  item_id     Int         @id @default(autoincrement())
  quantity    Int         @default(0)
  product_id  Int         
  product     Product     @relation(fields: [product_id], references: [product_id], onDelete: Cascade, onUpdate: Cascade, map: "FK_items_product_id")
  cart_item   cart_item[]

  @@map("items")
  @@index([product_id], map: "FK_items_productID")
}

model Product {
  product_id  Int         @id @default(autoincrement())
  description String?     @db.Text
  name        String      
  price       Float       @default(0) 
  type        ProductType @default(Other)
  item        Item[]

  @@map("products")
}

enum ProductType {
  CPU
  GPU
  RAM
  PSU
  Storage
  Motherboard
  Case
  Other
}
